- name: gather variables
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
    - "{{ ansible_os_family }}.yml"
    - "main.yml"
  tags: 
    - vars
    - postgres

- name: PostgreSQL | Ensure PostgreSQL is running
  service:
    name: postgresql
    state: started
  tags:
    - postgres

- name: update postgres db configuration
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/{{ DB_VERSION }}/main/pg_hba.conf
  notify:
    - restart postgresql

- name: atmosphere database is created
  postgresql_db: name={{ ATMO_DBNAME }} state=present login_user=postgres 
  sudo: yes
  sudo_user: postgres
  tags: 
    - postgres

- name: ensure user has access to atmosphere database
  sudo_user: postgres
  postgresql_user: db={{ ATMO_DBNAME }} name={{ ATMO_DBUSER }} password={{ ATMO_DBPASSWORD }} priv=ALL
  tags:
    - postgres

- name: add atmosphere user connect privileges
  sudo_user: postgres
  postgresql_user: db={{ ATMO_DBNAME }} name={{ ATMO_DBUSER }} role_attr_flags=CREATEDB,NOSUPERUSER,CREATEROLE
  tags:
    - postgres

- name: remove public connect privileges to atmosphere db
  sudo_user: postgres
  command: psql -c "REVOKE connect ON DATABASE {{ ATMO_DBNAME }} FROM PUBLIC;"
  tags:
    - postgres

- name: add atmo user connect privileges to atmosphere db
  sudo_user: postgres
  command: psql -c "GRANT connect ON DATABASE {{ ATMO_DBNAME }} TO {{ ATMO_DBUSER }};"
  tags:
    - postgres


- name: troposphere database is created
  postgresql_db: name={{ TROPO_DBNAME }} state=present login_user=postgres 
  sudo: yes
  sudo_user: postgres
  tags: 
    - postgres

- name: ensure user has access to troposphere database
  sudo_user: postgres
  postgresql_user: db={{ TROPO_DBNAME }} name={{ TROPO_DBUSER }} password={{ TROPO_DBPASSWORD }} priv=ALL
  tags:
    - postgres

- name: add troposphere user connect privileges
  sudo_user: postgres
  postgresql_user: db={{ TROPO_DBNAME }} name={{ TROPO_DBUSER }} role_attr_flags=CREATEDB,NOSUPERUSER,CREATEROLE
  tags:
    - postgres

- name: remove public connect privileges to troposphere db
  sudo_user: postgres
  command: psql -c "REVOKE connect ON DATABASE {{ TROPO_DBNAME }} FROM PUBLIC;"
  tags:
    - postgres

- name: add atmo user connect privileges to troposphere db
  sudo_user: postgres
  command: psql -c "GRANT connect ON DATABASE {{ TROPO_DBNAME }} TO {{ TROPO_DBUSER }};"
  tags:
    - postgres

- name: copy over sql script for postgresql to run
  copy: src=test.sql dest={{ POSTGRES_SQL_INSTALL_DIRECTORY }}
  when: LOAD_DATABASE

- name: run sql script for postgresql script
  sudo_user: postgres
  command: psql -f {{ POSTGRES_SQL_INSTALL_DIRECTORY }}/test.sql
  when: LOAD_DATABASE
