- name: pip install requirements
  pip: requirements={{ TROPOSPHERE_LOCATION }}/dev_requirements.txt virtualenv={{ VIRTUAL_ENV_TROPOSPHERE }}  state=latest

- name: create troposphere log directory
  command: mkdir -p {{ TROPOSPHERE_LOCATION }}/logs

- name: create troposphere static directory
  command: mkdir -p {{ TROPOSPHERE_LOCATION }}/troposphere/tropo-static

- name: ensure local files directory exists
  local_action: >
      file path={{ role_path }}/files state=directory mode=0755

- name: create local atmosphere_variables.ini from dist
  local_action: >
      template src=../../../dist_files/troposphere_variables.ini.j2 dest={{ role_path }}/files/troposphere_variables.ini

- name: move over precompleted variables.ini
  copy: src=troposphere_variables.ini dest={{ TROPOSPHERE_LOCATION }}/variables.ini

- name: run generate script for troposphere
  shell: "{{ VIRTUAL_ENV_TROPOSPHERE }}/bin/python {{ TROPOSPHERE_LOCATION }}/configure" 

- name: troposphere manage collectstatic
  django_manage: >
      command=collectstatic
      app_path={{ TROPOSPHERE_LOCATION }}
      settings='troposphere.settings'
      pythonpath={{ TROPOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_TROPOSPHERE }}

- name: troposphere manage migrate
  django_manage: >
      command=migrate
      app_path={{ TROPOSPHERE_LOCATION }}
      settings='troposphere.settings'
      pythonpath={{ TROPOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_TROPOSPHERE }}

- name: add webserver user for user and group permissions
  file: path={{ TROPOSPHERE_LOCATION }} owner={{ WEBSERVER_USER }} group={{ WEBSERVER_USER }} recurse=yes

# nginx portion
- name: create apps-enabled directory
  command: mkdir -p {{ UWISGI_APPS_ENABLED_PATH }}

- name: link troposphere uwisgi conf file
  file: src={{ TROPOSPHERE_LOCATION }}/extras/troposphere.uwsgi.ini dest={{ UWISGI_APPS_ENABLED_PATH }}/troposphere.ini state=link

- name: make uwisgi and nginx stuff
  shell: '{{ item }}'
  args:
    chdir: "{{ TROPOSPHERE_LOCATION }}/extras/nginx"
  with_items:
    - make  

- name: build cf2
  shell: cp -r {{ TROPOSPHERE_LOCATION }}/troposphere/static/resources {{ TROPOSPHERE_LOCATION }}/troposphere/assets/

- name: remove node modules
  file: path={{ TROPOSPHERE_LOCATION }}/node_modules state=absent

- name: run npm install
  npm: path={{ TROPOSPHERE_LOCATION }} state=latest

- name: run npm build
  args:
    chdir: "{{ TROPOSPHERE_LOCATION }}"
  shell: npm run build
