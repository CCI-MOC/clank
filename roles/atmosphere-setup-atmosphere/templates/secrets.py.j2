"""
Settings that are secrets and otherwise sensitive.

"""
import sys

globals().update(vars(sys.modules["atmosphere.settings"]))

## ATMOSPHERE SUPERUSERS
#
# These users should NOT exist as regular users, and are used to alias
# all providers administrator accounts.
ATMOSPHERE_SUPERUSER = "atmoadmin"

## LICENSES
ATMOSPHERE_VNC_LICENSE = "{{ ATMOSPHERE_VNC_LICENSE }}"

## AUTH SETTINGS
TOKEN_EXPIRY_TIME = timedelta(days=1)
LDAP_SERVER = "{{ LDAP_SERVER }}"
LDAP_SERVER_DN = "{{ LDAP_SERVER_DN }}"

# iRODS Storage:
IRODS_HOST="{{ IRODS_HOST }}"
IRODS_PORT={{ IRODS_PORT }}
IRODS_ZONE="{{ IRODS_ZONE }}"
# In order to use iRODS effectively, we require iRODS administrator credentials
# to emulate other users and act on their behalf
IRODS_ADMIN_USER="{{ IRODS_ADMIN_USER }}"
IRODS_ADMIN_PASS="{{ IRODS_ADMIN_PASS }}"

# Local Storage:
# Local storage is necessary for imaging Eucalyptus
# There should be a minimum of 10GB of space remaining
# before attempting imaging.
# Ideally, this location should point to a storage volume
LOCAL_STORAGE = "{{ LOCAL_STORAGE }}"

# Openstack provider secrets
OPENSTACK_PROVIDER_KEY = ""
OPENSTACK_ADMIN_KEY = ""
OPENSTACK_ADMIN_SECRET = ""
OPENSTACK_AUTH_URL = ""
OPENSTACK_ADMIN_URL = OPENSTACK_AUTH_URL.replace("5000", "35357")
OPENSTACK_ADMIN_TENANT = ""
OPENSTACK_DEFAULT_REGION = ""
OPENSTACK_DEFAULT_ROUTER = ""

# Openstack provider dictionaries
OPENSTACK_ARGS = {
    "username": OPENSTACK_ADMIN_KEY,
    "password": OPENSTACK_ADMIN_SECRET,
    "tenant_name": OPENSTACK_ADMIN_TENANT,
    "auth_url": OPENSTACK_ADMIN_URL,
    "region_name": OPENSTACK_DEFAULT_REGION
}
OPENSTACK_NETWORK_ARGS = {
    "auth_url": OPENSTACK_ADMIN_URL,
    "region_name": OPENSTACK_DEFAULT_REGION,
    "router_name": OPENSTACK_DEFAULT_ROUTER
}

## SERVICE SETTINGS
# Eucalyptus provider secrets
EUCA_S3_URL = ""
EUCA_EC2_URL = ""
EUCA_ADMIN_KEY = ""
EUCA_ADMIN_SECRET = ""
EUCALYPTUS_ARGS = {
    "key": EUCA_ADMIN_KEY,
    "secret": EUCA_ADMIN_SECRET,
    "url": EUCA_EC2_URL,
    "account_path": "/services/Accounts"
}

