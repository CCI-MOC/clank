- name: pip install requirements
  pip: requirements={{ ATMOSPHERE_LOCATION }}/requirements.txt virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: wheel install requirements
  command: "{{ VIRTUAL_ENV_ATMOSPHERE }}/bin/wheel install-scripts celery"

- name: move over local.py template
  template: src=local.py.j2 dest={{ ATMOSPHERE_LOCATION }}/atmosphere/settings/local.py

- name: move over secrets.py template
  template: src=secrets.py.j2 dest={{ ATMOSPHERE_LOCATION }}/atmosphere/settings/secrets.py

- name: move over wsgi.py template
  template: src=wsgi.py.j2 dest={{ ATMOSPHERE_LOCATION }}/atmosphere/wsgi.py force=yes

- name: move over ansible.cfg template
  template: src=/tmp/atmosphere-ansible-bioci/ansible/ansible.cfg.j2 dest={{ ANSIBLE_DEPLOY_LOCATION }}/ansible/ansible.cfg force=yes
  tags:
    - ansible-deploy

- name: make ssh file directory
  command: mkdir -p {{ ATMOSPHERE_LOCATION }}/extras/ssh/

- name: move over id_rsa private key
  copy: src=id_rsa dest={{ ATMOSPHERE_LOCATION }}/extras/ssh/

- name: move over id_rsa public key
  copy: src=id_rsa.pub dest={{ ATMOSPHERE_LOCATION }}/extras/ssh/

- name: create atmosphere log directory
  command: mkdir -p {{ ATMOSPHERE_LOCATION }}/logs


#### DB migrations
- name: run syncdb
  django_manage: >
      command=syncdb
      app_path={{ ATMOSPHERE_LOCATION }}
      settings='atmosphere.settings'
      pythonpath={{ ATMOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: run migrate
  django_manage: >
      command=migrate
      app_path={{ ATMOSPHERE_LOCATION }}
      settings='atmosphere.settings'
      pythonpath={{ ATMOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: load provider fixtures
  django_manage: >
      command=loaddata
      app_path={{ ATMOSPHERE_LOCATION }}
      fixtures={{ ATMOSPHERE_LOCATION }}/core/fixtures/provider.json
      settings='atmosphere.settings'
      pythonpath={{ ATMOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: load quota fixtures
  django_manage: >
      command=loaddata
      app_path={{ ATMOSPHERE_LOCATION }}
      fixtures={{ ATMOSPHERE_LOCATION }}/core/fixtures/quota.json
      settings='atmosphere.settings'
      pythonpath={{ ATMOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: created atmosphere cache requests table
  django_manage: >
      command=createcachetable
      cache_table="atmosphere_cache_requests"
      app_path={{ ATMOSPHERE_LOCATION }}
      settings='atmosphere.settings'
      pythonpath={{ ATMOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: collectstatic
  django_manage: >
      command=collectstatic
      app_path={{ ATMOSPHERE_LOCATION }}
      settings='atmosphere.settings'
      pythonpath={{ ATMOSPHERE_LOCATION }}
      virtualenv={{ VIRTUAL_ENV_ATMOSPHERE }}

- name: touch atmosphere.log
  command: touch {{ ATMOSPHERE_LOCATION }}/logs/atmosphere.log

- name: touch atmosphere_status.log
  command: touch {{ ATMOSPHERE_LOCATION }}/logs/atmosphere_status.log

- name: add webserver user for user and group permissions
  file: path={{ ATMOSPHERE_LOCATION }} owner={{ WEBSERVER_USER }} group={{ WEBSERVER_USER }} recurse=yes
